ALTER PROCEDURE [Grading].[usp_labDaysCalculation_LabGradingDaysMaster_list] declare @lab_submission_date_list varchar(max)=null, @lab_grading_days_report bit=0, @lab_days_calculation_in_days bit =1, @page_no smallint=null, @noOfDataperPage smallint=7, @size_list varchar(max)=null, @lab_location_list varchar(max)=null, @add_days smallint=null 
AS BEGIN BEGIN TRY              DECLARE @current_date DATE =convert(date ,Master.Fn_GetISTDATETIME());       DECLARE @lab_submission_dates as table(lab_submission_date date)       DECLARE @from_data int,@to_data int       drop table if exists #lab_days_calculation_list       if(isnull(@lab_submission_date_list,'')<>'')       BEGIN         insert into @lab_submission_dates         select value from string_split(@lab_submission_date_list,',')       END;              select         dense_rank() over( order by ldcm.lab_submission_date desc) rank,         ldcm.lab_days_code,format(ldcm.lab_submission_date,'yyyy-MM-dd') lab_submission_date,         CASE WHEN ldcm.lab_size_code=ldsm.size_code and ldcm.lab_location_code=llm.LAB_LOCATION_CODE THEN format(DATEADD(day, ISNULL(@add_days,0), ldcm.lab_result_date),'dd-MM-yyyy') ELSE null end as lab_result_date,         CASE WHEN ldcm.lab_size_code=ldsm.size_code and ldcm.lab_location_code=llm.LAB_LOCATION_CODE THEN (DATEDIFF(DD,ldcm.lab_submission_date,ldcm.lab_result_date)+1) ELSE null end as lab_days_calculation_in_days,         ldsm.size_name size_name,ldsm.size_code,llm.lab_location_display_name lab_location_name,llm.lab_location_code lab_location_code       into #lab_days_calculation_list       from Grading.LAB_DAYS_CALCULATION_MASTER ldcm WITH(NOLOCK)       cross join Master.LAB_LOCATION_MASTER llm WITH(NOLOCK)  ON llm.lab_location_code=ldcm.lab_location_code       cross join Master.LAB_DAYS_LAB_LOCATION_MASTER llm with(nolock)       left join Master.LAB_DAYS_SIZE_MASTER ldsm WITH(NOLOCK) ON ldsm.size_code=ldcm.lab_size_code       LEFT JOIN @lab_submission_dates lsd on lsd.lab_submission_date=ldcm.lab_submission_date       where llm.is_active=1 and ldsm.is_active=1       and (isnull(@lab_submission_date_list,'')='' or lsd.lab_submission_date=ldcm.lab_submission_date)       and (ISNULL(@lab_location_list,'')='' or ldcm.lab_location_code in (select value from string_split(@lab_location_list,',')))       and (ISNULL(@size_list,'')='' or ldcm.lab_size_code in (select value from string_split(@size_list,',')))       declare  @cols NVARCHAR(MAX)         set @cols = STUFF((SELECT ',' + QUOTENAME(size_name)               FROM Master.LAB_DAYS_SIZE_MASTER c WITH(NOLOCK)               FOR XML PATH(''), TYPE               ).value('.', 'NVARCHAR(MAX)')             ,1,1,'')              if(@lab_grading_days_report=1)       BEGIN         select @from_data=MIN(rank),@to_data=MAX(rank) from #lab_days_calculation_list          set @from_data=((@page_no-1)@noOfDataperPage)+1         set @to_data=@from_data+(@noOfDataperPage-1)       END       ELSE       BEGIN                  set @from_data=1         set @to_data=5       END              declare @total_data int = (select MAX(rank) from #lab_days_calculation_list)              declare @query nvarchar(max)       if(@lab_days_calculation_in_days =1)       BEGIN       set @query = 'SELECT * from (                 select lab_submission_date,lab_location_code,max(lab_days_calculation_in_days) lab_days_calculation_in_days,size_name, lab_location_name, '+convert(varchar(32),@total_data)+' as total_data from #lab_days_calculation_list where rank between '+convert(varchar(10),@from_data)+' and '+convert(varchar(10),@to_data)+' group by lab_submission_date,lab_location_code,size_name,lab_location_name ) x               pivot (max(lab_days_calculation_in_days) for size_name in ('+ @cols +')) p order by lab_submission_date asc'       END       ELSE       BEGIN       set @query = 'SELECT * from (                 select lab_submission_date,lab_location_code,max(lab_result_date) lab_result_date, size_name,lab_location_name, '+convert(varchar(32),@total_data)+' as total_data from #lab_days_calculation_list where rank between '+convert(varchar(10),@from_data)+' and '+convert(varchar(10),@to_data)+' group by lab_submission_date,lab_location_code,size_name,lab_location_name ) x               pivot (max(lab_result_date) for size_name in ('+ @cols +')) p order by lab_submission_date asc'       END       exec sp_executesql @query          END TRY   BEGIN CATCH     DECLARE @ErrorMessage NVARCHAR(4000),       @ErrorSeverity INT, @ErrorLine INT     SELECT @ErrorMessage = ERROR_MESSAGE(),       @ErrorSeverity = ERROR_SEVERITY(), @ErrorLine = ERROR_LINE()     EXEC [dbo].[LOGINFO] @ProcedureName = 'Grading.usp_labDaysCalculation_LabGradingDaysMaster_list',@LogType = 'INFO',@ErrorLine = @ErrorLine,@ErrorMessage = @ErrorMessage,@ExecutedBy = NULL,@HostIPName = '',@FormName = '',@AdditionalInfo = 'CATCH BLOCK'     RAISERROR (@ErrorMessage,@ErrorSeverity,1)   END CATCH END
